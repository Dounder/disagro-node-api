# Stage 1: Base dependencies layer
FROM node:22-alpine AS base

WORKDIR /app

# Copy only the files needed for installing dependencies
COPY package.json pnpm-lock.yaml ./

# Install pnpm globally
RUN npm install -g pnpm

# Install all dependencies (including devDependencies)
RUN pnpm install --frozen-lockfile

# Stage 2: Build the application
FROM node:22-alpine AS build

WORKDIR /app

# Copy dependencies from the base stage
COPY --from=base /app/node_modules ./node_modules
COPY . .

# Install pnpm globally
RUN npm install -g pnpm

# Generate Prisma client
RUN pnpm prisma generate

# Build the NestJS application
RUN pnpm build

# Prune devDependencies after the build
RUN pnpm prune --prod

# Stage 3: Final production image
FROM node:22-alpine AS prod

WORKDIR /app

# Copy only the necessary files for production
COPY --from=build /app/node_modules ./node_modules
COPY --from=build /app/package*.json ./
COPY --from=build /app/dist ./dist
COPY --from=build /app/prisma ./prisma

# Set environment variables
ENV NODE_ENV=production

# Switch to a non-root user for security
USER node

# Expose the application port
EXPOSE 3000

# Run the application
CMD ["sh", "-c", "npx prisma migrate dev && node dist/src/app.js"]